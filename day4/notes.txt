

there are 25 spaces on the board

1  2  3  4  5
6  7  8  9  10
11 12 13 14 15
16 17 18 19 20
21 22 23 24 25


bitmap

[b0, b1, ... b24]

example wins:
  00000 11111 00000 00000 00000
  01000 01000 01000 01000 01000
  00100 10100 00100 00100 00100
  00111 11111 00110 00001 00100

  11110 01


check column:

01000
01000
01000
01000
01000 AND
popcount() == 1

check row:

00000  ^
11111  |
00000  | AND  popcount() == 1
00001  |
10000  v



how many bits do we need?

25 bits x 100 games = 2500 bits

byte per count per column per row = 8 * 800 * 800

how do you select 5 bits from 4 bytes (32 bits):


row winners

v high                         v low
00000000 00000000 00000000 00011111   // 0x1f
00000000 00000000 00000011 11100000   // 0x3e0
00000000 00000000 01111100 00000000   // 0x7c00
00000000 00001111 10000000 00000000   // 0xf8000
00000001 11110000 00000000 00000000   // 0x1F00000


column winners

v high                         v low  
00000000 00010000 10000100 00100001   // 0x108421
00000000 00100001 00001000 01000010   // 0x210842
00000000 01000010 00010000 10000100   // 0x421084
00000000 10000100 00100001 00001000   // 0x842108
00000001 00001000 01000010 00010000   // 0x1084210


